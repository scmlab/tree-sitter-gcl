==================
Integer
==================

{ 0 }

---

(source_file
  (assert
    (integer)))

==================
Variable
==================

{ x }

---

(source_file
  (assert
    (variable)))

==================
Constant
==================

{ X }

---

(source_file
  (assert
    (constant)))

==================
Numerical
==================

{ (x + 1) * 3 - (1) }

---

(source_file
  (assert
    (sub
      (mul
        (add (variable) (integer))
        (integer))
      (integer))
    ))

==================
Op
==================

{ f(1, g(2, 3)) }

---

(source_file
  (assert
    (op
      (op_name)
      (integer)
      (op
        (op_name)
        (integer)
        (integer)))))

==================
Boolean
==================

{ True }
{ False }

---

(source_file
  (assert
    (boolean))
  (assert
    (boolean)))

==================
Predicate
==================

{ X = x + 1 && True || ~False }

---

(source_file
  (assert
    (or
      (and
        (eq
          (constant)
          (add (variable) (integer))
        )
        (boolean))
      (neg (boolean)))))
